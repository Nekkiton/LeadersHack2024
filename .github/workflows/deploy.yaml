name: 'Project deploy'

on:
  workflow_call:

jobs:
  deploy:
      name: Deploy containers
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            infra/docker-compose.yaml
            infra/ai/docker-compose.yaml
          sparse-checkout-cone-mode: false

      - name: copy file via ssh
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "infra/docker-compose.yaml"
          target: /home/backend-user
          strip_components: 1

      - name: pull and up new images
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            export MONGO_DATABASE=${{ secrets.MONGO_DATABASE }}
            export MONGO_CONNECTION_STRING=${{ secrets.MONGO_CONNECTION_STRING }}
            export JWT_PUBLIC_KEY_PATH='/cert/jwtRS256.key.pub'
            export JWT_PRIVATE_KEY_PATH='/cert/jwtRS256.key'
            export JWT_ALGORITHM='RS256'
            export ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}
            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            export TELEMOST_API=${{ secrets.TELEMOST_API }}
            export AI_URL=${{ secrets.AI_URL }}

            docker compose pull
            docker compose up -d

            docker image prune -a -f

      - name: (AI) copy file via ssh
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_AI }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "infra/ai/docker-compose.yaml"
          target: /home/backend-user
          strip_components: 2

      - name: (AI) pull and up new images
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST_AI }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

            docker compose pull
            docker compose up -d

            docker image prune -a -f